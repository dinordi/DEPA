classDiagram
    direction LR

    class Circuit {
        +addComponent(Component* component)
        +Component* getComponent(string id)
        +vector~Component*~& getComponents()
        +addEdge(Edge* edge)
        +vector~Edge*~& getEdges()
    }

    class Component {
        <<abstract>>
        +string id
        +int propagationDelay
        +bool outputValue
        +setId(string newId)
        +int getPropagationDelay()
        +bool getOutputValue()
        +void setOutputValue(bool value)
        +virtual bool calculateOutput()
        +virtual Component* clone()
        +virtual Type getType()
        +virtual bool isLogicGate()
        +virtual bool isProbe()
        +virtual bool isInput()
        +virtual LogicGate* asLogicGate()
        +virtual Probe* asProbe()
        +virtual Input* asInput()
        +addObserver(ComponentObserver* observer)
        +removeObserver(ComponentObserver* observer)
        +notifyObservers()
    }

    class ComponentObserver {
        <<interface>>
        +void update(Component* subject)
    }

    class LogicGate {
        <<abstract>>
        +addInput(Component* input)
        +Component* getInput(int index)
        +int getInputCount()
        +vector~Component*~ inputs
        +override bool calculateOutput()
        +override Component* clone()
        +override Type getType()
        +override bool isLogicGate()
        +override LogicGate* asLogicGate()
    }

    class Input {
        +setValue(bool value)
        +override bool calculateOutput()
        +override Component* clone()
        +override Type getType()
        +override bool isInput()
        +override Input* asInput()
    }

    class Probe {
        +bool recordedValue
        +bool getRecordedValue()
        +override bool calculateOutput()
        +override Component* clone()
        +override Type getType()
        +override bool isProbe()
        +override Probe* asProbe()
        +void update(Component* subject)
        +void observeComponent(Component* component)
    }

    class ANDGate {
        +override bool calculateOutput()
        +override Component* clone()
    }
    class ORGate {
        +override bool calculateOutput()
        +override Component* clone()
    }
    class NOTGate {
        +override bool calculateOutput()
        +override Component* clone()
    }
    class NANDGate {
        +override bool calculateOutput()
        +override Component* clone()
    }
    class NORGate {
        +override bool calculateOutput()
        +override Component* clone()
    }
    class XORGate {
        +override bool calculateOutput()
        +override Component* clone()
    }

    class Edge {
        +Component* getSource()
        +Component* getTarget()
        -Component* source
        -Component* target
    }

    class Simulator {
        +Simulator(Circuit* circuit = nullptr)
        +void setCircuit(Circuit* circuit)
        +Circuit* getCircuit()
        +void setInputFileHandler(InputFileHandler* handler)
        +void setOutputHandler(OutputHandler* handler)
        +bool loadCircuit(string filename)
        +void simulate(int timeSteps)
        +void displaySimulationResults(int timeSteps)
    }

    class ComponentFactory {
        +registerPrototype(string key, Component* prototype)
        +Component* createComponent(string key, string id)
        -unordered_map~string, Component*~ prototypes
    }

    class InputFileHandler {
        +InputFileHandler()
        +Circuit* readCircuit(string filename)
        +void initializePrototypes()
        -void parseComponent(Circuit* circuit, string line)
        -void parseConnection(Circuit* circuit, string line)
    }

    class OutputHandler {
        +OutputHandler(ostream& output = cout)
        +OutputHandler(string filename)
        +~OutputHandler()
        +void writeResults(vector~Probe*~ probes)
    }

    Circuit "1" *-- "*" Component : contains
    Circuit "1" *-- "*" Edge : contains

    Component <|-- LogicGate
    Component <|-- Input
    Component <|-- Probe

    LogicGate <|-- ANDGate
    LogicGate <|-- ORGate
    LogicGate <|-- NOTGate
    LogicGate <|-- NANDGate
    LogicGate <|-- NORGate
    LogicGate <|-- XORGate

    Edge "1" -- "1" Component : source
    Edge "1" -- "1" Component : target

    Probe ..|> ComponentObserver

    Simulator "1" -- "1" Circuit : simulates
    Simulator "1" -- "1" InputFileHandler : uses
    Simulator "1" -- "1" OutputHandler : uses

    InputFileHandler "1" -- "1" ComponentFactory : uses
    InputFileHandler "1" -- "1" Circuit : creates
    OutputHandler "1" -- "*" Probe : reports

    ComponentFactory ..> Component : creates (via clone)